buildscript {
    ext.kotlin_version = "1.6.10"

    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            url "https://jitpack.io"
        }
        maven {
            url "https://repo.spongepowered.org/repository/maven-public/"
        }
    }
    dependencies {
        classpath "com.github.debuggingss:ForgeGradle:FG_2.1-SNAPSHOT"
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
        classpath "com.github.debuggingss:MixinGradle:0.6-SNAPSHOT"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "org.spongepowered.mixin"


version = "1.0"
group = "com.jelly.MightyMiner"
archivesBaseName = "MightyMiner"

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false

    clientRunArgs += "--mixin mixins.mightyminer.json"
    clientRunArgs += '--tweakClass gg.essential.loader.stage0.EssentialSetupTweaker'
}


configurations {
    include
    implementation.extendsFrom(include)
}

repositories {
    maven {
        url = "https://repo.sk1er.club/repository/maven-public"
    }
    maven {
        url = "https://jitpack.io/"
    }
    maven {
        url = "https://repo.spongepowered.org/repository/maven-public/"
    }
    mavenCentral()
}

dependencies {
    compileOnly "gg.essential:essential-1.8.9-forge:1725"
    include "gg.essential:loader-launchwrapper:1.1.3"

    implementation('org.spongepowered:mixin:0.8.5-SNAPSHOT')
    annotationProcessor('org.spongepowered:mixin:0.7.11-SNAPSHOT')

    include('com.googlecode.json-simple:json-simple:1.1.1')
    implementation('com.googlecode.json-simple:json-simple:1.1.1')

    include('org.apache.commons:commons-collections4:4.4')
    implementation('org.apache.commons:commons-collections4:4.4')

    include(fileTree(dir: 'libs', include: '*.jar'))
    implementation(fileTree(dir: 'libs', include: '*.jar'))

    //  fileTree(dir: 'libs', include: '*.jar')
    // include(files('libs/RoseGoldAddons-2.8.9.jar'))
    //  implementation(files("libs/RoseGoldAddons-2.8.9.jar"))

}

mixin {
    add sourceSets.main, "mixins.mightyminer.refmap.json"
    defaultObfuscationEnv searge

}

jar {
    manifest.attributes(
            "ForceLoadAsMod": true,
            'ModSide': 'CLIENT',
            "TweakClass": "gg.essential.loader.stage0.EssentialSetupTweaker",
            "TweakOrder": "0",
            'MixinConfigs': "mixins.mightyminer.json",
    )
    enabled = false
}

sourceJar {
    enabled = false

}

shadowJar {
    archiveClassifier.set("")
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    configurations = [project.configurations.include]

    exclude "LICENSE.md"
    exclude "pack.mcmeta"
    exclude "dummyThing"
    exclude "**/module-info.class"
    exclude "*.so"
    exclude "*.dylib"
    exclude "*.dll"
    exclude "*.jnilib"
    exclude "ibxm/**"
    exclude "com/jcraft/**"
    exclude "org/lwjgl/**"
    exclude "net/java/**"

    exclude "META-INF/proguard/**"
    exclude "META-INF/maven/**"
    exclude "META-INF/versions/**"
    exclude "META-INF/com.android.tools/**"

    exclude "fabric.mod.json"
}

tasks.reobfJar.dependsOn tasks.shadowJar

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    filesMatching("mcmod.info") {
        expand(
                "version": project.version,
                "mcversion": project.minecraft.version
        )
    }
}